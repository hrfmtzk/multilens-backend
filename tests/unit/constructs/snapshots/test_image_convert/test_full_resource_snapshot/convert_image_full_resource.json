{
  "Resources": {
    "ImageConvertInputBucketNotifications72BEF3B2": {
      "Type": "Custom::S3BucketNotifications",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "ImageConvertInputBucketAE332DB8"
        },
        "NotificationConfiguration": {
          "TopicConfigurations": [
            {
              "Events": [
                "s3:ObjectCreated:*"
              ],
              "TopicArn": {
                "Ref": "ImageConvertTopic9040C68E"
              }
            }
          ]
        },
        "Managed": true
      },
      "DependsOn": [
        "ImageConvertTopicPolicy8AA73203",
        "ImageConvertTopic9040C68E"
      ]
    },
    "ImageConvertInputBucketAE332DB8": {
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "ImageConvertOutputBucket05C439E9": {
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "ImageConvertTopic9040C68E": {
      "Type": "AWS::SNS::Topic"
    },
    "ImageConvertTopicPolicy8AA73203": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "ImageConvertInputBucketAE332DB8",
                      "Arn"
                    ]
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Resource": {
                "Ref": "ImageConvertTopic9040C68E"
              },
              "Sid": "0"
            }
          ],
          "Version": "2012-10-17"
        },
        "Topics": [
          {
            "Ref": "ImageConvertTopic9040C68E"
          }
        ]
      }
    },
    "ImageConvertFunctionOriginalOriginalServiceRoleCB372042": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "ImageConvertFunctionOriginalOriginalServiceRoleDefaultPolicy17E35B1F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ImageConvertInputBucketAE332DB8",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ImageConvertInputBucketAE332DB8",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ImageConvertOutputBucket05C439E9",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ImageConvertOutputBucket05C439E9",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ImageConvertOriginalOriginal63D7AB72",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ImageConvertFunctionOriginalOriginalServiceRoleDefaultPolicy17E35B1F",
        "Roles": [
          {
            "Ref": "ImageConvertFunctionOriginalOriginalServiceRoleCB372042"
          }
        ]
      }
    },
    "ImageConvertFunctionOriginalOriginalC95BB891": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {},
        "Role": {
          "Fn::GetAtt": [
            "ImageConvertFunctionOriginalOriginalServiceRoleCB372042",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "APP_FORMAT": "original",
            "APP_RESIZE": "original",
            "APP_USE_SQS": "True",
            "LOG_LEVEL": "DEBUG",
            "POWERTOOLS_SERVICE_NAME": "ImageConvert",
            "BUCKET_NAME": {
              "Ref": "ImageConvertOutputBucket05C439E9"
            },
            "SENTRY_DSN": "https://sentry.example.com"
          }
        },
        "Handler": "index.lambda_handler",
        "MemorySize": 512,
        "Runtime": "python3.9",
        "Timeout": 15
      },
      "DependsOn": [
        "ImageConvertFunctionOriginalOriginalServiceRoleDefaultPolicy17E35B1F",
        "ImageConvertFunctionOriginalOriginalServiceRoleCB372042"
      ]
    },
    "ImageConvertFunctionOriginalOriginalLogRetentionF2EC44DB": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ImageConvertFunctionOriginalOriginalC95BB891"
              }
            ]
          ]
        },
        "RetentionInDays": 30
      }
    },
    "ImageConvertFunctionOriginalOriginalSqsEventSourceTestImageConvertOriginalOriginal8CD812A6DDB18288": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "FunctionName": {
          "Ref": "ImageConvertFunctionOriginalOriginalC95BB891"
        },
        "EventSourceArn": {
          "Fn::GetAtt": [
            "ImageConvertOriginalOriginal63D7AB72",
            "Arn"
          ]
        }
      }
    },
    "ImageConvertOriginalOriginal63D7AB72": {
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "ImageConvertOriginalOriginalPolicyF666F0D0": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Ref": "ImageConvertTopic9040C68E"
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "sns.amazonaws.com"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "ImageConvertOriginalOriginal63D7AB72",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "ImageConvertOriginalOriginal63D7AB72"
          }
        ]
      }
    },
    "ImageConvertOriginalOriginalTestImageConvertTopic2B0CABD4D8872C1B": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "sqs",
        "TopicArn": {
          "Ref": "ImageConvertTopic9040C68E"
        },
        "Endpoint": {
          "Fn::GetAtt": [
            "ImageConvertOriginalOriginal63D7AB72",
            "Arn"
          ]
        },
        "RawMessageDelivery": true
      }
    },
    "ImageConvertFunctionJpeg400ServiceRoleE7264150": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "ImageConvertFunctionJpeg400ServiceRoleDefaultPolicyAAE4B3E6": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ImageConvertInputBucketAE332DB8",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ImageConvertInputBucketAE332DB8",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ImageConvertOutputBucket05C439E9",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ImageConvertOutputBucket05C439E9",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ImageConvertJpeg4001FE44D6D",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ImageConvertFunctionJpeg400ServiceRoleDefaultPolicyAAE4B3E6",
        "Roles": [
          {
            "Ref": "ImageConvertFunctionJpeg400ServiceRoleE7264150"
          }
        ]
      }
    },
    "ImageConvertFunctionJpeg400239BE46A": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {},
        "Role": {
          "Fn::GetAtt": [
            "ImageConvertFunctionJpeg400ServiceRoleE7264150",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "APP_FORMAT": "jpeg",
            "APP_RESIZE": "400",
            "APP_USE_SQS": "True",
            "LOG_LEVEL": "DEBUG",
            "POWERTOOLS_SERVICE_NAME": "ImageConvert",
            "BUCKET_NAME": {
              "Ref": "ImageConvertOutputBucket05C439E9"
            },
            "SENTRY_DSN": "https://sentry.example.com"
          }
        },
        "Handler": "index.lambda_handler",
        "MemorySize": 512,
        "Runtime": "python3.9",
        "Timeout": 15
      },
      "DependsOn": [
        "ImageConvertFunctionJpeg400ServiceRoleDefaultPolicyAAE4B3E6",
        "ImageConvertFunctionJpeg400ServiceRoleE7264150"
      ]
    },
    "ImageConvertFunctionJpeg400LogRetention193804D8": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ImageConvertFunctionJpeg400239BE46A"
              }
            ]
          ]
        },
        "RetentionInDays": 30
      }
    },
    "ImageConvertFunctionJpeg400SqsEventSourceTestImageConvertJpeg400945403E957EC53CD": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "FunctionName": {
          "Ref": "ImageConvertFunctionJpeg400239BE46A"
        },
        "EventSourceArn": {
          "Fn::GetAtt": [
            "ImageConvertJpeg4001FE44D6D",
            "Arn"
          ]
        }
      }
    },
    "ImageConvertJpeg4001FE44D6D": {
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "ImageConvertJpeg400Policy01296773": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Ref": "ImageConvertTopic9040C68E"
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "sns.amazonaws.com"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "ImageConvertJpeg4001FE44D6D",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "ImageConvertJpeg4001FE44D6D"
          }
        ]
      }
    },
    "ImageConvertJpeg400TestImageConvertTopic2B0CABD45F58CDEF": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "sqs",
        "TopicArn": {
          "Ref": "ImageConvertTopic9040C68E"
        },
        "Endpoint": {
          "Fn::GetAtt": [
            "ImageConvertJpeg4001FE44D6D",
            "Arn"
          ]
        },
        "RawMessageDelivery": true
      }
    },
    "ImageConvertFunctionWebpOriginalServiceRoleDCD0E539": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "ImageConvertFunctionWebpOriginalServiceRoleDefaultPolicy22B2B722": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ImageConvertInputBucketAE332DB8",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ImageConvertInputBucketAE332DB8",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ImageConvertOutputBucket05C439E9",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ImageConvertOutputBucket05C439E9",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ImageConvertWebpOriginalB23A3565",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ImageConvertFunctionWebpOriginalServiceRoleDefaultPolicy22B2B722",
        "Roles": [
          {
            "Ref": "ImageConvertFunctionWebpOriginalServiceRoleDCD0E539"
          }
        ]
      }
    },
    "ImageConvertFunctionWebpOriginalA5B5395A": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {},
        "Role": {
          "Fn::GetAtt": [
            "ImageConvertFunctionWebpOriginalServiceRoleDCD0E539",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "APP_FORMAT": "webp",
            "APP_RESIZE": "original",
            "APP_USE_SQS": "True",
            "LOG_LEVEL": "DEBUG",
            "POWERTOOLS_SERVICE_NAME": "ImageConvert",
            "BUCKET_NAME": {
              "Ref": "ImageConvertOutputBucket05C439E9"
            },
            "SENTRY_DSN": "https://sentry.example.com"
          }
        },
        "Handler": "index.lambda_handler",
        "MemorySize": 512,
        "Runtime": "python3.9",
        "Timeout": 15
      },
      "DependsOn": [
        "ImageConvertFunctionWebpOriginalServiceRoleDefaultPolicy22B2B722",
        "ImageConvertFunctionWebpOriginalServiceRoleDCD0E539"
      ]
    },
    "ImageConvertFunctionWebpOriginalLogRetention195DCFAB": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ImageConvertFunctionWebpOriginalA5B5395A"
              }
            ]
          ]
        },
        "RetentionInDays": 30
      }
    },
    "ImageConvertFunctionWebpOriginalSqsEventSourceTestImageConvertWebpOriginal5957437A40A74129": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "FunctionName": {
          "Ref": "ImageConvertFunctionWebpOriginalA5B5395A"
        },
        "EventSourceArn": {
          "Fn::GetAtt": [
            "ImageConvertWebpOriginalB23A3565",
            "Arn"
          ]
        }
      }
    },
    "ImageConvertWebpOriginalB23A3565": {
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "ImageConvertWebpOriginalPolicyC7A427E0": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Ref": "ImageConvertTopic9040C68E"
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "sns.amazonaws.com"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "ImageConvertWebpOriginalB23A3565",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "ImageConvertWebpOriginalB23A3565"
          }
        ]
      }
    },
    "ImageConvertWebpOriginalTestImageConvertTopic2B0CABD41F78B35E": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "sqs",
        "TopicArn": {
          "Ref": "ImageConvertTopic9040C68E"
        },
        "Endpoint": {
          "Fn::GetAtt": [
            "ImageConvertWebpOriginalB23A3565",
            "Arn"
          ]
        },
        "RawMessageDelivery": true
      }
    },
    "ImageConvertFunctionWebp400ServiceRoleCDB01A22": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "ImageConvertFunctionWebp400ServiceRoleDefaultPolicyCF220689": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ImageConvertInputBucketAE332DB8",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ImageConvertInputBucketAE332DB8",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ImageConvertOutputBucket05C439E9",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ImageConvertOutputBucket05C439E9",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ImageConvertWebp400CBF0EA7B",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ImageConvertFunctionWebp400ServiceRoleDefaultPolicyCF220689",
        "Roles": [
          {
            "Ref": "ImageConvertFunctionWebp400ServiceRoleCDB01A22"
          }
        ]
      }
    },
    "ImageConvertFunctionWebp40038D75207": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {},
        "Role": {
          "Fn::GetAtt": [
            "ImageConvertFunctionWebp400ServiceRoleCDB01A22",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "APP_FORMAT": "webp",
            "APP_RESIZE": "400",
            "APP_USE_SQS": "True",
            "LOG_LEVEL": "DEBUG",
            "POWERTOOLS_SERVICE_NAME": "ImageConvert",
            "BUCKET_NAME": {
              "Ref": "ImageConvertOutputBucket05C439E9"
            },
            "SENTRY_DSN": "https://sentry.example.com"
          }
        },
        "Handler": "index.lambda_handler",
        "MemorySize": 512,
        "Runtime": "python3.9",
        "Timeout": 15
      },
      "DependsOn": [
        "ImageConvertFunctionWebp400ServiceRoleDefaultPolicyCF220689",
        "ImageConvertFunctionWebp400ServiceRoleCDB01A22"
      ]
    },
    "ImageConvertFunctionWebp400LogRetention465EE3AD": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ImageConvertFunctionWebp40038D75207"
              }
            ]
          ]
        },
        "RetentionInDays": 30
      }
    },
    "ImageConvertFunctionWebp400SqsEventSourceTestImageConvertWebp4006A1B1771C5AA4939": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "FunctionName": {
          "Ref": "ImageConvertFunctionWebp40038D75207"
        },
        "EventSourceArn": {
          "Fn::GetAtt": [
            "ImageConvertWebp400CBF0EA7B",
            "Arn"
          ]
        }
      }
    },
    "ImageConvertWebp400CBF0EA7B": {
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "ImageConvertWebp400PolicyD1B45275": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Ref": "ImageConvertTopic9040C68E"
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "sns.amazonaws.com"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "ImageConvertWebp400CBF0EA7B",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "ImageConvertWebp400CBF0EA7B"
          }
        ]
      }
    },
    "ImageConvertWebp400TestImageConvertTopic2B0CABD45C89EB9B": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "sqs",
        "TopicArn": {
          "Ref": "ImageConvertTopic9040C68E"
        },
        "Endpoint": {
          "Fn::GetAtt": [
            "ImageConvertWebp400CBF0EA7B",
            "Arn"
          ]
        },
        "RawMessageDelivery": true
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": [
          {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
          }
        ]
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
        "Code": {
          "ZipFile": "import boto3  # type: ignore\nimport json\nimport logging\nimport urllib.request\n\ns3 = boto3.client(\"s3\")\n\nCONFIGURATION_TYPES = [\"TopicConfigurations\", \"QueueConfigurations\", \"LambdaFunctionConfigurations\"]\n\ndef handler(event: dict, context):\n    response_status = \"SUCCESS\"\n    error_message = \"\"\n    try:\n        props = event[\"ResourceProperties\"]\n        bucket = props[\"BucketName\"]\n        notification_configuration = props[\"NotificationConfiguration\"]\n        request_type = event[\"RequestType\"]\n        managed = props.get('Managed', 'true').lower() == 'true'\n        stack_id = event['StackId']\n\n        if managed:\n          config = handle_managed(request_type, notification_configuration)\n        else:\n          config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)\n\n        put_bucket_notification_configuration(bucket, config)\n    except Exception as e:\n        logging.exception(\"Failed to put bucket notification configuration\")\n        response_status = \"FAILED\"\n        error_message = f\"Error: {str(e)}. \"\n    finally:\n        submit_response(event, context, response_status, error_message)\n\n\ndef handle_managed(request_type, notification_configuration):\n  if request_type == 'Delete':\n    return {}\n  return notification_configuration\n\n\ndef handle_unmanaged(bucket, stack_id, request_type, notification_configuration):\n\n  # find external notifications\n  external_notifications = find_external_notifications(bucket, stack_id)\n\n  # if delete, that's all we need\n  if request_type == 'Delete':\n    return external_notifications\n\n  def with_id(notification):\n    notification['Id'] = f\"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}\"\n    return notification\n\n  # otherwise, merge external with incoming config and augment with id\n  notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external = external_notifications.get(t, [])\n    incoming = [with_id(n) for n in notification_configuration.get(t, [])]\n    notifications[t] = external + incoming\n  return notifications\n\n\ndef find_external_notifications(bucket, stack_id):\n  existing_notifications = get_bucket_notification_configuration(bucket)\n  external_notifications = {}\n  for t in CONFIGURATION_TYPES:\n    # if the notification was created by us, we know what id to expect\n    # so we can filter by it.\n    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\"{stack_id}-\")]\n\n  return external_notifications\n\n\ndef get_bucket_notification_configuration(bucket):\n  return s3.get_bucket_notification_configuration(Bucket=bucket)\n\n\ndef put_bucket_notification_configuration(bucket, notification_configuration):\n  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)\n\n\ndef submit_response(event: dict, context, response_status: str, error_message: str):\n    response_body = json.dumps(\n        {\n            \"Status\": response_status,\n            \"Reason\": f\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\",\n            \"PhysicalResourceId\": event.get(\"PhysicalResourceId\") or event[\"LogicalResourceId\"],\n            \"StackId\": event[\"StackId\"],\n            \"RequestId\": event[\"RequestId\"],\n            \"LogicalResourceId\": event[\"LogicalResourceId\"],\n            \"NoEcho\": False,\n        }\n    ).encode(\"utf-8\")\n    headers = {\"content-type\": \"\", \"content-length\": str(len(response_body))}\n    try:\n        req = urllib.request.Request(url=event[\"ResponseURL\"], headers=headers, data=response_body, method=\"PUT\")\n        with urllib.request.urlopen(req) as response:\n            print(response.read().decode(\"utf-8\"))\n        print(\"Status code: \" + response.reason)\n    except Exception as e:\n        print(\"send(..) failed executing request.urlopen(..): \" + str(e))\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "Timeout": 300
      },
      "DependsOn": [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
      ]
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
          }
        ]
      }
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.handler",
        "Runtime": "nodejs14.x",
        "Code": {},
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}